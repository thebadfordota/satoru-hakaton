[tool.poetry]
name = "EPAction"
version = "0.1.0"
description = "Backend"
authors = ["thebadfordota <aleksandr.skrynnik@fake_mail.com>"]
readme = "BACKEND.md"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = {extras = ["all"], version = "^0.110.0"}
sqlalchemy = {extras = ["postgresql-asyncpg"], version = "^2.0.28"}
uvicorn = {extras = ["standard"], version = "^0.28.0"}
fastapi-users = {extras = ["sqlalchemy"], version = "^13.0.0"}
alembic = "^1.13.1"
psycopg2-binary = "^2.9.9"
pytest = "^8.1.1"
pytest-cov = "^4.1.0"
pytest-env = "^1.1.3"
pytest-mock = "^3.12.0"
pytest-randomly = "^3.15.0"
pytest-asyncio = "^0.23.5.post1"
pytest-alembic = "^0.11.0"
ruff = "^0.3.3"
loguru = "^0.7.2"
firebase-admin = "^6.5.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100
select = ["E", "F", "I"]

[tool.ruff.per-file-ignores]
"app/models/__init__.py" = ["F401"]

[tool.mypy]
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = [
  "app.*"
]
ignore_missing_imports = true
follow_imports = "normal"
disallow_untyped_defs = true
disallow_untyped_calls = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
disable_test_id_escaping_and_forfeit_all_rights_to_community_support = true
testpaths = [
  "app"
]
addopts = "-v -rsxX -l --tb=short --strict --cov=app -p no:warnings"
xfails_strict = true
markers = [
  "tmp: Temporary",
  "optional: Optional",
]
env = [
  "APP_CONFIG_FILE=test.env",
]
