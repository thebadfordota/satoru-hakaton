Функция КонструкторТелаRegister()
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("email");
	СтруктураВозврата.Вставить("password");
	СтруктураВозврата.Вставить("is_active", "true");
	СтруктураВозврата.Вставить("is_superuser", "false");
	СтруктураВозврата.Вставить("is_verified", "false");
	СтруктураВозврата.Вставить("username");
	СтруктураВозврата.Вставить("first_name");
	СтруктураВозврата.Вставить("last_name");
	СтруктураВозврата.Вставить("patronymic"); //Отчество
	СтруктураВозврата.Вставить("position"); // Должность 
	СтруктураВозврата.Вставить("task_type"); // Настройки задач 
	Возврат СтруктураВозврата;
	
КонецФункции 

&НаСервере
Функция ПолучитьДанныеПользователя(ПользователиЛок) Экспорт
	
	СоответствиеВозврата = Новый Соответствие;
	
	Для Каждого ЛокПользователь Из ПользователиЛок Цикл

		СсылкаПользователь = ЛокПользователь.Пользователь;
		ПользовательСистемы = Пользователи.НайтиПоСсылке(СсылкаПользователь);
		Тело = КонструкторТелаRegister();
		Тело.email = ПользовательСистемы.АдресЭлектроннойПочты;
		Тело.password = СтрЗаменить(Base64Значение(Лев(ПользовательСистемы.СохраняемоеЗначениеПароля, Найти(ПользовательСистемы.СохраняемоеЗначениеПароля, ",") - 1)), " ", "");
		Тело.username = ПользовательСистемы.Имя;
		Тело.first_name = СсылкаПользователь.ФизическоеЛицо.Имя;
		Тело.last_name = СсылкаПользователь.ФизическоеЛицо.Фамилия;
		Тело.patronymic = СсылкаПользователь.ФизическоеЛицо.Отчество;
		Тело.position = Строка(СсылкаПользователь.Подразделение);
		Тело.task_type = Строка(ЛокПользователь.УровеньЗаданй);
		
		СоответствиеВозврата.Вставить(СсылкаПользователь, Тело);
		
	КонецЦикла; 
	
	Возврат СоответствиеВозврата;
	
КонецФункции